@page
@model ArchivePage<EpisodesArchive, PinoyDevs.Models.EpisodePost>
@{
    ViewData["Title"] = !string.IsNullOrEmpty(Model.Data.MetaTitle) ? Model.Data.MetaTitle : Model.Data.Title;
    var hasImage = Model.Data.PrimaryImage.HasValue;

    var posts = Model.Archive.Posts.Count;
}
@section head {
    @WebApp.MetaTags(Model.Data)
}

<header @(hasImage ? "class=has-image" : "") @(hasImage ? $"style=background-image:url({ @Url.Content(WebApp.Media.ResizeImage(Model.Data.PrimaryImage, 1920, 400)) })" : "")>
    <div class="dimmer"></div>
    <div class="container text-center">
        <h1>@Model.Data.Title</h1>
    </div>
</header>

<main class="archive">
    <div class="container">
        @for (var n = 0; n < posts; n += 2)
        {

        <div class="list-group">
            @for (var i = n; i < Math.Min(posts, n + 2); i++)
            {
                var post = Model.Archive.Posts[i];


                <a href="@post.Permalink" class="list-group-item list-group-item-action flex-column align-items-start active">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1">@post.Title</h5>
                        <small>@post.Created.Humanize(false)</small>
                    </div>
                    <p class="mb-1">@Html.Raw(post.Episode.Summary)</p>
                    <small>Donec id elit non mi porta.</small>
                </a>

                @if (i == 0)
                {
                    n--;
                    break;
                }
            }
        </div>
        }
    </div>
    @foreach (var block in Model.Data.Blocks)
    {
        <div class="block @block.CssName()">
            <div class="container">
                @Html.DisplayFor(m => block, block.GetType().Name)
            </div>
        </div>
    }
</main>
